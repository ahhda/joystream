name: Create release

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Release name (v9.3.0 - Antioch)'
        required: true
      tag:
        description: 'Tag (v9.3.0)'
        required: true

env:
  REPOSITORY: ahhda/joystream

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - id: compute_shasum
        name: Compute runtime code shasum
        run: |
          export RUNTIME_CODE_SHASUM=`scripts/runtime-code-shasum.sh`
          echo "::set-output name=shasum::${RUNTIME_CODE_SHASUM}"

      - id: extract_binaries
        name: Copy binaries from docker files
        run: |
          IMAGE=${{ env.REPOSITORY }}:${{ env.TAG_SHASUM }}

          docker create --name temp-container-joystream-node $IMAGE-amd64
          docker cp temp-container-joystream-node:/joystream/node ./node-amd64
          docker cp temp-container-joystream-node:/joystream/runtime.compact.wasm ./joystream_runtime_${{ github.event.inputs.tag }}.wasm
          RESULT=$(docker exec temp-container-joystream-node b2sum -l 256 runtime.compact.wasm)
          docker rm temp-container-joystream-node
          echo "::set-output name=blob_hash::${RESULT}"

          docker cp $(docker create --rm $IMAGE-arm64):/joystream/node ./node-arm64
          docker cp $(docker create --rm $IMAGE-arm):/joystream/node ./node-arm

          tar -czvf joystream-node-${{ github.event.inputs.tag }}-amd64.tar.gz node-amd64
          tar -czvf joystream-node-${{ github.event.inputs.tag }}-arm64.tar.gz node-arm64
          tar -czvf joystream-node-${{ github.event.inputs.tag }}-armv7.tar.gz node-arm

      - name: Release
        uses: softprops/action-gh-release@v1
        # if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            *.tar.gz
            *.wasm
          tag_name: ${{ github.event.inputs.tag }}
          name: ${{ github.event.inputs.name }}
          draft: true
          body: 'Verify wasm hash:

            ```
            ${{ steps.extract_binaries.outputs.blob_hash }}
            ```
            '
